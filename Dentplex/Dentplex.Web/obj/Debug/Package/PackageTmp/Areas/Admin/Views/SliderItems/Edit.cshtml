@model Dentplex.Data.Model.SliderItem
@{
    ViewBag.Title = "ویرایش اسلایدر";
}
<div class="panel panel-info" style="margin-top:20px">
    <div class="panel-heading"><h4>ویرایش اسلایدر</h4></div>
    <div class="panel-body">
        @using (Html.BeginForm("Edit", "SliderItems", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.SlideItemID)
                @Html.HiddenFor(model => model.SlideItemImage)
                <div class="form-group">
                    @Html.LabelFor(model => model.SlideID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.DropDownList("SlideID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SlideID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.SlideItemTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.SlideItemTitle, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SlideItemTitle, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.SlideItemLink, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.SlideItemLink, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SlideItemLink, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.SlideItemOrder, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.SlideItemOrder, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SlideItemOrder, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.SlideItemImage, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        <input type="file" name="imgSliderItems" />
                        @Html.ValidationMessageFor(model => model.SlideItemImage, "", new { @class = "text-danger" })
                        <br />
                        @if (Model.SlideItemImage != null)
                        {
                            <img src="/Images/SliderItemImages/@Model.SlideItemImage" class="thumbnail" style="max-width: 100px" />
                        }
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="ویرایش" class="btn btn-primary" />
                        @Html.ActionLink("بازگشت به فهرست", "Index")
                    </div>
                </div>
            </div>
        }
    </div>
</div>



<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script type="text/javascript">

    $(function () {
        $('#ProductText').ckeditor();

        $("#ProductGroupID").change(function () {
            $("#ProductSubGroupID").empty();
            $.ajax({
                type: 'Get',
                url: '/Admin/Products/GetSubGroups',
                dataType: 'json',
                data: { id: $("#ProductGroupID").val() },
                success: function (subs) {
                    $.each(subs, function (i, sub) {
                        $("#ProductSubGroupID").append('<option value="' + sub.Value + '">' + sub.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        });
    });
</script>
